name: Build and Deploy Backend Golang to GHCR

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Extract metadata
        id: meta
        run: |
          VERSION=$(grep -E '^mod_version=' architectury-mod/gradle.properties | cut -d'=' -f2)
          echo "Extracted version: $VERSION"
          
          if [ -z "$VERSION" ]; then
            VERSION="0.0.0"
            echo "Using default version: $VERSION"
          fi
          
          # Преобразуем имя репозитория
          REPO_NAME=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "repo-name=${REPO_NAME}" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./backend/golang
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: |
            ghcr.io/${{ steps.meta.outputs.repo-name }}:go-${{ steps.meta.outputs.version }}
            ghcr.io/${{ steps.meta.outputs.repo-name }}:go-latest
          build-args: |
            JAR_FILE=${{ steps.meta.outputs.jar-name }}
            JAVA_VERSION=${{ steps.meta.outputs.java-version }}
          file: ./backend/golang/Dockerfile